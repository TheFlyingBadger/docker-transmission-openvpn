#!/usr/bin/env python3

import docker
import os
from datetime import datetime

THIS_PREFIX = 'volansmelesmeles.transmissionopenvpn'

def _print (s : str):
    print (f'{datetime.now().strftime("%Y-%m-%d %H:%M:%S")} : {s}')

def connect():
    return docker.DockerClient(base_url='unix://var/run/docker.sock')

def addLabel (d, key, val):
    d[f"{THIS_PREFIX}.{key.lower()}"] = val
    return d

def getFileContents (thePath):
    f = ""
    with open(thePath,"r") as j:
        f = j.readlines()
    return ';'.join(f)

def getJackettVer():
    return getFileContents ('getJackett/jackett.ver.txt')

def getJackettURL():
    return getFileContents ('getJackett/jackett.url.txt')

def main():
    baseImage = 'haugene/transmission-openvpn:latest'
    client = connect()
    theImages = client.images.list(baseImage)
    labels = {}
    attrs  = {}
    for i in theImages:
        attrs  = i.attrs
        labels = i.labels

    if 'maintainer' in labels and labels['maintainer'] is not None and len(labels['maintainer']) > 0:
        labels = addLabel(labels, 'base.image.maintainer',labels['maintainer'])

    labels = addLabel(labels, 'base.image',baseImage)

    for k in ['RepoTags','RepoDigests']:
        if k in attrs and attrs[k] is not None and len(attrs[k]) > 0:
            labels = addLabel(labels, f'base.image.{k}',';'.join(attrs[k]))

    for k in ['Architecture','Os']:
        if k in attrs and attrs[k] is not None:
            labels = addLabel(labels, f'base.image.{k}',attrs[k])

    labels['maintainer'] = 'jon@badger.shoes'
    labels = addLabel(labels, 'jackett.version',getJackettVer())
    labels = addLabel(labels, 'jackett.url',getJackettURL())
    
    # for key in attrs:
    #     print (key, "=",attrs[key])

    fnameNoLabels = "DockerfileNoLabels"
    with open (fnameNoLabels, "r") as f:
        nolabels = f.readlines()

    dockerfile = ["#"
                 ,"# This Dockerfile generated by createLabelFile.py"
                 ,"# It reads 'DockerfileNoLabels' and then adds"
                 ,"#  some generated label entries"
                 ,"#"
                 ,f"# <{fnameNoLabels}>"
                 ]
    for o in nolabels:
        dockerfile.append(o)
    dockerfile.append(f"# </{fnameNoLabels}>")

    dockerfile.append ("#")
    dockerfile.append ("# LABEL entries added by createLabelFile.py")
    dockerfile.append ("#")

    labelLines = []
    def thisLabel (k, v):
        labelLines.append (f'LABEL {k}=\"{v}\"')


    for key in labels:
        escapedVal = labels[key].replace('"','\"')
        thisLabel (key, escapedVal)
    labelLines = list(sorted(labelLines))
    for l in labelLines:
        dockerfile.append (l)

    for ix,line in enumerate(dockerfile):
        if not (line[-1] == "\n"):
            line += "\n"
            dockerfile[ix] = line

    with open ("Dockerfile", "w") as f:
        f.writelines(dockerfile)

if __name__ == '__main__':
   main()